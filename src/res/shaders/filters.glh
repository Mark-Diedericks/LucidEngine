vec4 calcGausBlur(sampler2D texture, vec2 coords, vec3 blurScaleX, vec3 blurScaleY) {
	vec4 color1 = vec4(0.0);
	vec4 color2 = vec4(0.0);

	color1 += texture2D(texture, coords + (vec2(-3.0) * blurScaleX.xy)) * vec4(1.0/64.0);
	color1 += texture2D(texture, coords + (vec2(-2.0) * blurScaleX.xy)) * vec4(6.0/64.0);
	color1 += texture2D(texture, coords + (vec2(-1.0) * blurScaleX.xy)) * vec4(15.0/64.0);
	color1 += texture2D(texture, coords + (vec2(0.0) * blurScaleX.xy))  * vec4(20.0/64.0);
	color1 += texture2D(texture, coords + (vec2(1.0) * blurScaleX.xy))  * vec4(15.0/64.0);
	color1 += texture2D(texture, coords + (vec2(2.0) * blurScaleX.xy))  * vec4(6.0/64.0);
	color1 += texture2D(texture, coords + (vec2(3.0) * blurScaleX.xy))  * vec4(1.0/64.0);
	
	color2 += texture2D(texture, coords + (vec2(-3.0) * blurScaleY.xy)) * vec4(1.0/64.0);
	color2 += texture2D(texture, coords + (vec2(-2.0) * blurScaleY.xy)) * vec4(6.0/64.0);
	color2 += texture2D(texture, coords + (vec2(-1.0) * blurScaleY.xy)) * vec4(15.0/64.0);
	color2 += texture2D(texture, coords + (vec2(0.0) * blurScaleY.xy))  * vec4(20.0/64.0);
	color2 += texture2D(texture, coords + (vec2(1.0) * blurScaleY.xy))  * vec4(15.0/64.0);
	color2 += texture2D(texture, coords + (vec2(2.0) * blurScaleY.xy))  * vec4(6.0/64.0);
	color2 += texture2D(texture, coords + (vec2(3.0) * blurScaleY.xy))  * vec4(1.0/64.0);
	
	return (color1 + color2) / vec4(2.0);
}

vec4 calcFXAA(vec3 ifts, float spanMax, float reduceMin, float reduceMul, sampler2D texture, vec2 texCoords) {
	vec3 luma = vec3(0.299, 0.587, 0.114);
	
	float lumaTL = dot(luma, texture2D(texture, texCoords.xy + (vec2(-1.0, -1.0) * ifts.xy)).xyz);
	float lumaTR = dot(luma, texture2D(texture, texCoords.xy + (vec2(1.0, -1.0) * ifts.xy)).xyz);
	float lumaBL = dot(luma, texture2D(texture, texCoords.xy + (vec2(-1.0, 1.0) * ifts.xy)).xyz);
	float lumaBR = dot(luma, texture2D(texture, texCoords.xy + (vec2(1.0, 1.0) * ifts.xy)).xyz);
	float lumaMi = dot(luma, texture2D(texture, texCoords.xy).xyz);
	
	vec2 blurDir = vec2(-((lumaTL + lumaTR) - (lumaBL + lumaBR)), ((lumaTL + lumaBL) - (lumaTR + lumaBR)));
	
	float reduceDir = max((lumaTL + lumaTR + lumaBL + lumaBR) * (reduceMul * 0.25), reduceMin);
	float blurDirAdj = 1.0 / (min(abs(blurDir.x), abs(blurDir.y)) + reduceDir);
	blurDir = min(vec2(spanMax, spanMax), max(vec2(-spanMax, -spanMax), blurDir * blurDirAdj)) * ifts.xy;
	
	vec3 res1 = (1.0 / 2.0) * (texture2D(texture, texCoords.xy + (blurDir.xy * vec2(1.0 / 3.0 - 0.5))).xyz + texture2D(texture, texCoords.xy + (blurDir.xy * vec2(2.0 / 3.0 - 0.5))).xyz);
	vec3 res2 = res1 * (1.0 / 2.0) + (1.0 / 4.0) * (texture2D(texture, texCoords.xy + (blurDir.xy * vec2(0.0 / 3.0 - 0.5))).xyz + texture2D(texture, texCoords.xy + (blurDir.xy * vec2(3.0 / 3.0 - 0.5))).xyz);
	
	float lumaRes2 = dot(luma, res2);
	float lumaMin = min(lumaMi, min(min(lumaTL, lumaTR), min(lumaBL, lumaBR)));
	float lumaMax = max(lumaMi, max(max(lumaTL, lumaTR), max(lumaBL, lumaBR)));
	
	if(lumaRes2 < lumaMin || lumaRes2 > lumaMax) return vec4(res1, 1.0);
	else return vec4(res2, 1.0);
}